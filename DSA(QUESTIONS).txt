Q.11) find duplicate in an array of N+1 Integers
SOL)
	class Solution {
    public int findDuplicate(int[] nums) {
        Arrays.sort(nums);
        for (int i=1;i<nums.length;i++){
            if(nums[i] == nums[i-1])
                return nums[i];
        }
        return -1;
    }
}

Q.12) Merge 2 sorted arrays without using Extra space.
SOL)
	 int temp[]= new int[n+m];// new temp array to store all values
           int p=0,q=0,last=0;
           for(int i=0;i<n+m;i++){
               if((p>n-1)||(q>m-1))
               break;
               else
               {
                    if(arr1[p]>arr2[q]) //put the smaller value to temp first
                   {
                       temp[i]=arr2[q];
                       q++;
                   }
                   else
                   {
                       temp[i]=arr1[p];
                       p++;
                   }
               }
               last=i;
           }
           
           if (p>n-1) // adding rest of the values from the arrays to the temp
                   for(int i=q;i<m;i++)
                   {
                       temp[++last]=arr2[q];
                       q++;
                   }
           if (q>m-1) // adding rest of the values from the arrays to the temp
                   for(int i=p;i<n;i++)
                       {
                           temp[++last]=arr1[p];
                           p++;
                       }

           for (int i = 0; i < temp.length; i++) { // splitting the array
               if(i<n)
                   arr1[i]=temp[i];
               else
               arr2[i-n]=temp[i];
           }
   }