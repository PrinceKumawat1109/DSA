class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> lst = new ArrayList();
        int row = matrix.length;
        int col = matrix[0].length;
        
        if(row==0){//edge case
            return lst;    
        }
        
        int left=0, right=col-1, top=0, bottom=row-1, direction=0;
        
        while(left<=right && top<=bottom){
             if(direction==0){
                for(int i=left; i<=right; i++){
                    lst.add(matrix[top][i]);
                    }
                 direction=1;top++;
             }  
             else if(direction==1){
                    for(int i=top; i<=bottom; i++){
                        lst.add(matrix[i][right]);
                        }   
                    direction=2;right--;
             }
             else if(direction==2){
                    for(int i=right; i>=left; i--){
                        lst.add(matrix[bottom][i]);
                        }   
                    direction=3;bottom--;
             }
             else if(direction==3){
                    for(int i=bottom; i>=top; i--){
                        lst.add(matrix[i][left]);
                        }  
                    direction=0;left++;
             }
        }
        return lst;
    }
}